//
// Global Utility Classes
// --------------------------------------------------

@if $use-global == true {

    .hide-text    { @include hide-text; }
    .is-hide      { display: none; }
    .is-visible   { display: block; }
    .is-hidden    { visibility: hidden; }
    .is-centered  { @include center-block; }

    .has-clear    { clear: both; }
    .clearfix     { @include clearfix; }

    .pull-left    { @include float(left); }
    .pull-right   { @include float(right); }
    .reset-float  { @include reset-float; }

    .has-radius       { @include border-radius($base-border-radius); }
    .has-radius-large { @include border-radius($border-radius-large); }
    .has-radius-small { @include border-radius($border-radius-small); }
    .is-rounded       { @include border-radius(50%); }

    .no-filter { filter: none; } // for gte IE9 only

    .is-fixed {
        position: fixed;
        width: 100%;
        top: 0; left: 0;
        z-index: 9999;
    }

    .has-overlay {
        background: rgba(#000000, 0.65);
        border-top: 1px solid rgba(#000000, 0.90);
        height: 100%;
        width: 100%;
    }

    .has-breakline {
        margin: 5px auto;
        border-bottom: 1px solid rgba(0,0,0,0.75);
        @include clearfix;
    }

}


//
// Types Utility Classes
// --------------------------------------------------

@if $use-types == true {

    // Headings
    .big-title {
        margin-bottom: $base-line-height;
        font-size: $base-font-size * 1.5;
        font-weight: 100;
        line-height: $base-line-height * 1.5;
    }
    .normal-title {
        font-size: $base-font-size * 2;
        font-weight: 300;
        padding-bottom: ($base-line-height / 2) - 1;
        margin: $base-line-height 0 ($base-line-height * 1.5);
    }
    .small-title {
        font-size: $base-font-size - 4;
        font-weight: 400;
        padding-bottom: ($base-line-height / 2) - 2;
        margin: $base-line-height 0 ($base-line-height * 1.25);
    }

    // Paragraphs
    .text-left    { text-align: left; }
    .text-center  { text-align: center; }
    .text-right   { text-align: right; }
    .text-justify { text-align: justify; }

    .font-lighter { font-weight: 300; }
    .font-normal  { font-weight: normal; }
    .font-bold    { font-weight: bold; }
    .font-bolder  { font-weight: bolder; }

    .text-upper { text-transform: uppercase; }
    .text-lower { text-transform: lowercase; }

    .text-underline { border-bottom: 1px solid; }
    .text-highlight { background: #ffc; }

    .text-white { color: $white; }
    a.text-white:hover { color: darken($white, 10%); }

    .text-muted { color: darken($gray-light, 20%); }
    a.text-muted:hover { color: darken($gray-light, 30%); }

    .text-warning { color: $warning-text; }
    a.text-warning:hover { color: darken($warning-text, 10%); }

    .text-error { color: $error-text; }
    a.text-error:hover { color: darken($error-text, 10%); }

    .text-info { color: $info-text; }
    a.text-info:hover { color: darken($info-text, 10%); }

    .text-success { color: $success-text; }
    a.text-success:hover { color: darken($success-text, 10%); }

}


//
// Lists Utility Classes
// --------------------------------------------------

@if $use-lists == true {

    .list-inline { @include horizontal-list; }

    // Horizontal layout (like forms)
    .dl-horizontal {
        @include clearfix; // Ensure dl clears floats if empty dd elements present
        dt {
            float: left;
            width: $horizontal-component-offset - 20;
            clear: left;
            text-align: right;
            @include text-overflow;
        }
        dd {
            margin-left: $horizontal-component-offset;
        }
    }

}


//
// Images Utility Classes
// --------------------------------------------------

@if $use-images == true {

    .img-left {
        @include float(left);
        margin: 0 30px 30px 0;
        border: none;
    }
    .img-right {
        @include float(right);
        margin: 0 0 30px 30px;
    }

    .img-circle   { @include img-circle(240px); }
    .img-rounded  { @include border-radius($base-border-radius); }
    .img-polaroid {
        padding: 4px;
        background-color: $white;
        border: 1px solid $gray-light;
        border: 1px solid rgba(0,0,0,.2);
        @include box-shadow(0 1px 3px rgba(0,0,0,.1));
    }

}


//
// Table Utility Classes
// --------------------------------------------------

@if $use-tables == true {

    // Condensed
    .table-condensed {
        th,
        td {
            padding: 4px 5px;
        }
    }

    // Bordered
    .table-bordered {
        border: 1px solid $table-border;
        border-collapse: separate; // Done so we can round those corners!

        @if $legacy-support == true {
            *border-collapse: collapse; // IE7 can't round corners anyway
        }

        border-left: 0;
        @include border-radius($base-border-radius);

        th,
        td {
            border-left: 1px solid $table-border;
        }

        // Prevent a double border
        caption + thead tr:first-child th,
        caption + tbody tr:first-child th,
        caption + tbody tr:first-child td,
        colgroup + thead tr:first-child th,
        colgroup + tbody tr:first-child th,
        colgroup + tbody tr:first-child td,
        thead:first-child tr:first-child th,
        tbody:first-child tr:first-child th,
        tbody:first-child tr:first-child td {
            border-top: 0;
        }

        // For first th or td in the first row in the first thead or tbody
        thead:first-child tr:first-child > th:first-child,
        tbody:first-child tr:first-child > td:first-child {
            @include border-top-left-radius($base-border-radius);
        }
        thead:first-child tr:first-child > th:last-child,
        tbody:first-child tr:first-child > td:last-child {
            @include border-top-right-radius($base-border-radius);
        }

        // For first th or td in the last row in the last thead or tbody
        thead:last-child tr:last-child > th:first-child,
        tbody:last-child tr:last-child > td:first-child,
        tfoot:last-child tr:last-child > td:first-child {
            @include border-bottom-left-radius($base-border-radius);
        }
        thead:last-child tr:last-child > th:last-child,
        tbody:last-child tr:last-child > td:last-child,
        tfoot:last-child tr:last-child > td:last-child {
            @include border-bottom-right-radius($base-border-radius);
        }

        // Clear border-radius for first and last td in the last row in the last tbody for table with tfoot
        tfoot + tbody:last-child tr:last-child td:first-child {
            @include border-bottom-left-radius(0);
        }
        tfoot + tbody:last-child tr:last-child td:last-child {
            @include border-bottom-right-radius(0);
        }

        // Special fixes to round the left border on the first td/th
        caption + thead tr:first-child th:first-child,
        caption + tbody tr:first-child td:first-child,
        colgroup + thead tr:first-child th:first-child,
        colgroup + tbody tr:first-child td:first-child {
            @include border-top-left-radius($base-border-radius);
        }
        caption + thead tr:first-child th:last-child,
        caption + tbody tr:first-child td:last-child,
        colgroup + thead tr:first-child th:last-child,
        colgroup + tbody tr:first-child td:last-child {
            @include border-top-right-radius($base-border-radius);
        }
    }

    // Striped
    .table-striped {
        tbody {
            > tr:nth-child(odd) > td,
            > tr:nth-child(odd) > th {
                background-color: $table-background-accent;
            }
        }
    }

}


//
// Forms Utility Classes
// --------------------------------------------------

@if $use-forms == true {


    // Forms Actions
    // -------------------------------

    .form-actions {
        padding: ($base-line-height - 1) 20px $base-line-height;
        margin-top: $base-line-height;
        margin-bottom: $base-line-height;
        background-color: $form-actions-background;
        border-top: 1px solid #e5e5e5;
        @include clearfix; // Adding clearfix to allow for .pull-right button containers
    }


    // Horizontal & Vertical Forms
    // -------------------------------

    // Common properties
    .form-inline,
    .form-horizontal {
        input,
        textarea,
        select,
        .help-inline,
        .uneditable-input {
            display: inline-block;
            @if $legacy-support == true {
                @include legacy-inline-block;
            }
            margin-bottom: 0;
            vertical-align: middle;
        }
        // Re-hide hidden elements due to specifity
        .hide {
            display: none;
        }
    }
    .form-inline label {
        display: inline-block;
    }

    // Inline checkbox/radio labels (remove padding on left)
    .form-inline .radio,
    .form-inline .checkbox {
        padding-left: 0;
        margin-bottom: 0;
        vertical-align: middle;
    }
    // Remove float and margin, set to inline-block
    .form-inline .radio input[type="radio"],
    .form-inline .checkbox input[type="checkbox"] {
        float: left;
        margin-right: 3px;
        margin-left: 0;
    }

    // Margin to space out fieldsets
    .control-group {
        margin-bottom: $base-line-height / 2;
    }

    // Legend collapses margin, so next element is responsible for spacing
    legend + .control-group {
        margin-top: $base-line-height;
        -webkit-margin-top-collapse: separate;
    }

    // Horizontal-specific styles
    .form-horizontal {
        // Increase spacing between groups
        .control-group {
            margin-bottom: $base-line-height;
            @include clearfix;
        }
        // Float the labels left
        .control-label {
            float: left;
            width: $horizontal-component-offset - 20;
            padding-top: 5px;
            text-align: right;
        }
        // Move over all input controls and content
        .controls {
            margin-left: $horizontal-component-offset;
            @if $legacy-support == true {
                // Super jank IE7 fix to ensure the inputs in .input-append and input-prepend
                // don't inherit the margin of the parent, in this case .controls
                *display: inline-block;
                *padding-left: 20px;
                *margin-left: 0;
                &:first-child {
                    *padding-left: $horizontal-component-offset;
                }
            }
        }
        // Remove bottom margin on block level help text since that's accounted for on .control-group
        .help-block {
            margin-bottom: 0;
        }
        // And apply it only to .help-block instances that follow a form control
        input,
        select,
        textarea,
        .uneditable-input {
            + .help-block {
                margin-top: $base-line-height / 2;
            }
        }
        // Move over buttons in .form-actions to align with .controls
        .form-actions {
            padding-left: $horizontal-component-offset;
        }
    }

}


//
// Inputs Utility Classes
// --------------------------------------------------

@if $use-forms == true {

    // Input Sizes
    .input-mini   { @include input-size("mini"); }
    .input-small  { @include input-size("small"); }
    .input-medium { @include input-size("medium"); }
    .input-large  { @include input-size("large"); }
    .input-full   { @include input-size("full"); }

    // Checkbox and Radio Inline
    .radio,
    .checkbox {
        min-height: $base-line-height; // clear the floating input if there is no label text
        padding-left: 20px;
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
        float: left;
        margin-left: -20px;
    }

    .radio.inline,
    .checkbox.inline {
        @include inline-block;
        padding-top: 5px;
        margin-bottom: 0;
        vertical-align: middle;
    }
    .radio.inline + .radio.inline,
    .checkbox.inline + .checkbox.inline {
        margin-left: 10px; // space out consecutive inline controls
    }

    // Input States
    textarea,
    #{$all-text-inputs} {
        &.error {
            border: 1px solid $red-light;
        }
        &.success {
            border: 1px solid $green-light;
        }
    }

    // Help Text
    .help-block,
    .help-inline {
        color: lighten($text-color, 15%); // lighten the text some for contrast
    }

    .help-block {
        display: block; // account for any element using help-block
        margin-bottom: $base-line-height / 2;
    }

    .help-inline {
        display: inline-block;
        @if $legacy-support == true {
            @include legacy-inline-block;
        }
        vertical-align: middle;
        padding-left: 5px;
    }

    // Uneditable inputs
    .uneditable-input,
    .uneditable-textarea {
        color: $gray-light;
        background-color: darken($input-background, 1%);
        border-color: $input-border;
        cursor: not-allowed;
    }

    .uneditable-input { // For text that needs to appear as an input but should not be an input
    overflow: hidden; // prevent text from wrapping, but still cut it off like an input does
    white-space: nowrap;
    }

    .uneditable-textarea { // Make uneditable textareas behave like a textarea
        width: auto;
        height: auto;
    }

}


//
// Buttons
// --------------------------------------------------

@if $use-buttons == true {

    // Button Structure
    .btn,
    button.btn,
    input[type="submit"].btn,
    button[type="submit"].btn {
        @include button-structure(0, $base-font-size, 4px 12px);
        margin-bottom: 0;
        line-height: $base-line-height;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;

        @if $legacy-support == true {
            *border: 0;
            &::-moz-focus-inner {
                padding: 0;
                border: 0;
            }
            *padding-top: 3px;
            *padding-bottom: 3px;
            @include legacy-inline-block();
            @include legacy-restore-left-whitespace();
            &.btn-extra,
            &.btn-large {
                *padding-top: 7px;
                *padding-bottom: 7px;
            }
            &.btn-small {
                *padding-top: 3px;
                *padding-bottom: 3px;
            }
            &.btn-mini {
                *padding-top: 1px;
                *padding-bottom: 1px;
            }
        }

        // Hover/focus state
        &:hover,
        &:focus {
            @if $use-animations == true {
                @include transition(all linear 0.2s);
            }
            color: $white;
        }

        // Focus state for keyboard and accessibility
        &:focus {
            @include tab-focus();
        }

        // Active state
        &.active,
        &:active {
            outline: 0;
            color: $white;
        }

        // Disabled state
        &.btn-disabled,
        &[disabled] {
            cursor: default;
            background: $blue-light !important;
            @include opacity(0.65);
            &:hover, &:focus {
                cursor: default;
            }
        }
    }

    // Button Sizes
    // --------------------------------------------------

    // Extra Large
    .btn-extra { @include button-structure(0, $font-size-large * 2 , 18px 26px); }
    .btn-extra [class^="icon-"],
    .btn-extra [class*=" icon-"] {
        margin-top: 11px;
    }

    // Large
    .btn-large { @include button-structure(0, $font-size-large, 11px 19px); }
    .btn-large [class^="icon-"],
    .btn-large [class*=" icon-"] {
        margin-top: 4px;
    }

    // Small
    .btn-small { @include button-structure(0, $font-size-small, 2px 10px); }
    .btn-small [class^="icon-"],
    .btn-small [class*=" icon-"] {
        margin-top: 0;
    }

    // Mini
    .btn-mini { @include button-structure(0, $font-size-large, 0px 6px); }
    .btn-mini [class^="icon-"],
    .btn-mini [class*=" icon-"] {
        margin-top: -1px;
    }

    // Block button
    // -------------------------

    .btn-block {
        display: block;
        width: 100%;
        padding-left: 0;
        padding-right: 0;
        @include box-sizing(border-box);
    }

    // Vertically space out multiple block buttons
    .btn-block + .btn-block {
        margin-top: 5px;
    }

    // Specificity overrides
    input[type="submit"],
    input[type="reset"],
    input[type="button"] {
        &.btn-block {
            width: 100%;
        }
    }

    // Button Styles
    .btn-inverse     { @include button-gradient($btn-type, $gray-dark); }
    .btn-secondary   { @include button-gradient($btn-type, darken($gray-light, 12%)); }
    .btn-primary     { @include button-gradient($btn-type, $blue); }
    .btn-danger      { @include button-gradient($btn-type, $red); }
    .btn-info        { @include button-gradient($btn-type, $yellow); }
    .btn-success     { @include button-gradient($btn-type, $green); }

    // Link buttons
    // --------------------------------------------------

    // Make a button look and behave like a link
    .btn-link,
    .btn-link:active,
    .btn-link[disabled] {
        background-color: transparent;
        background-image: none;
    }
    .btn-link {
        border-color: transparent;
        cursor: pointer;
        color: $white;
    }
    .btn-link:hover,
    .btn-link:focus {
        color: $link-color-hover;
        text-decoration: underline;
        background-color: transparent;
    }
    .btn-link[disabled]:hover,
    .btn-link[disabled]:focus {
        color: $gray-dark;
        text-decoration: none;
    }

}
